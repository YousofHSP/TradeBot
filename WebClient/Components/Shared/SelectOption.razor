@typeparam TValue

@if (Parent.MatchesSearch(Text))
{
    <li>
        <a class="flex justify-between" @onclick="() => Parent.SelectAsync(Value, Text)" disabled="@Disabled">
            <span>@Text</span>
            @if (EqualityComparer<TValue>.Default.Equals(Parent.Value, Value))
            {
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">
                    <path fill-rule="evenodd"
                          d="M12.416 3.376a.75.75 0 0 1 .208 1.04l-5 7.5a.75.75 0 0 1-1.154.114l-3-3a.75.75 0 0 1 1.06-1.06l2.353 2.353 4.493-6.74a.75.75 0 0 1 1.04-.207Z"
                          clip-rule="evenodd"/>
                </svg>
            }
        </a>
    </li>
}

@code {
    [CascadingParameter] public SelectInput<TValue> Parent { get; set; } = default!;
    [Parameter] public TValue Value { get; set; } = default!;
    [Parameter] public string Text { get; set; } = string.Empty;
    [Parameter] public bool Disabled { get; set; }

    protected override void OnInitialized()
    {
        if (EqualityComparer<TValue>.Default.Equals(Parent.Value, Value))
        {
            Parent.SetBtnText(Text);
        }
    }

}
